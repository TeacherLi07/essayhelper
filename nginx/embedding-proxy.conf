# SiliconFlow API 嵌入向量缓存代理

# 定义向量嵌入结果缓存区域
proxy_cache_path /var/cache/nginx/embedding_cache levels=1:2 keys_zone=embedding_cache:10m max_size=1g
                 inactive=30d use_temp_path=off;

server {
    listen 8502;  # 使用不同端口避免与Streamlit冲突
    server_name localhost;
    
    # 日志配置
    access_log /var/log/nginx/embedding_access.log;
    error_log /var/log/nginx/embedding_error.log;

    # 增加请求体大小限制，以支持长文本的向量化
    client_max_body_size 10M;
    client_body_buffer_size 2M;
    
    # SiliconFlow嵌入API代理
    location /v1/embeddings {
        # 将请求代理到SiliconFlow API
        proxy_pass https://api.siliconflow.cn/v1/embeddings;
        
        # 设置代理请求头
        proxy_set_header Host api.siliconflow.cn;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ssl_server_name on;
        
        # 开启缓存
        proxy_buffering on;
        proxy_cache embedding_cache;
        proxy_cache_valid 200 30d;  # 成功响应缓存30天
        proxy_cache_methods POST;   # 明确缓存POST请求
        proxy_cache_key "$request_body";  # 使用请求体作为缓存键
        proxy_cache_lock on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        
        # 添加缓存状态头
        add_header X-Cache-Status $upstream_cache_status;
        
        # 增加超时时间以处理可能的慢响应
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # 健康检查端点
    location /health {
        return 200 'embedding_proxy_running';
        add_header Content-Type text/plain;
    }
}
